#!/usr/bin/env python3

from argparse import ArgumentParser, Namespace
from http.server import BaseHTTPRequestHandler, ThreadingHTTPServer
from shutil import get_terminal_size
from socket import getfqdn


class EchoServer(BaseHTTPRequestHandler):
  def __log_req__(self):
    _, cols = get_terminal_size()
    print("-" * cols)

    method = self.command
    path = self.path
    headers = self.headers.items()

    print(f"{method} -- {path}")
    print("::Headers::")
    for key, val in headers:
      print(f"{key}: {val}")

    self.send_response_only(200, "OK")

  def do_GET(self):
    self.__log_req__()


def parse_args() -> Namespace:
  parser = ArgumentParser()
  parser.add_argument("-o", "--open", action="store_true")
  parser.add_argument("-p", "--port", type=int, default=8080)
  return parser.parse_args()


def main() -> None:
  args = parse_args()
  addr = "" if args.open else "localhost"
  bind = (addr, args.port)

  host = getfqdn() if args.open else "localhost"
  print(f"SERVING -- http://{host}:{args.port}")

  httpd = ThreadingHTTPServer(bind, EchoServer)
  httpd.serve_forever()


try:
  main()
except KeyboardInterrupt:
  pass

